#include <windows.h>
#ifdef __APPLE__
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#endif

#include <stdlib.h>

#define RATIO 1.200 //mendefinisikan rasio dengan perbandingan 1:1.200

int lwindow; //lebar window (pixel)
int twindow; //tinggi window (pixel)
void init(void);
void display(void);
void keyboard(unsigned char, int, int);
void mouse(int button, int state, int x, int y);
void ukuran(int, int);
void mousemotion(int x, int y);

double zoom=2;
float xrot=0.0;
float yrot=0.0;
float xdiff=0.0;
float ydiff=0.0;
bool mousedown = false;

int is_depth;

int main(int argc, char **argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);
    //inisialisasi lebar dan tinggi window pake rasio
    lwindow = (int)(glutGet((GLenum)GLUT_SCREEN_WIDTH)*.4);
    twindow = (int)(lwindow/RATIO);

    //membuat window
    glutInitWindowSize(lwindow,twindow);
    glutInitWindowPosition((int)(glutGet((GLenum)GLUT_SCREEN_WIDTH)*.1),
        (glutGet((GLenum)GLUT_SCREEN_HEIGHT)/2)-(twindow/2));
    //glutInitWindowSize(800,600);
    //glutInitWindowPosition(250,80);
    glutCreateWindow("Kempinski Hotel Mall of Emirates");
    init();
    glutDisplayFunc(display);
    glutKeyboardFunc(keyboard);
    glutMouseFunc(mouse);
    glutMotionFunc(mousemotion);
    glutIdleFunc(display);
    glutReshapeFunc(ukuran);
    glutMainLoop();
    return 0;
}

void init(void)
{
    glClearColor(0.0,0.0,0.0,0.0);
    glMatrixMode(GL_PROJECTION);
    glEnable(GL_COLOR_MATERIAL);
    glEnable(GL_DEPTH_TEST);
    is_depth=1;
    glMatrixMode(GL_MODELVIEW);
    glPointSize(9.0);
    glLineWidth(6.0);
    glViewport(0,0,lwindow,twindow);
}

void display(void)
{
    if(is_depth)
        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
    else
        glClear(GL_COLOR_BUFFER_BIT);

    glLoadIdentity();
    gluLookAt(0.0, 0.0, 20.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0);//untuk mengatur penglihatan mata/penglihatan objek
    glRotatef(xrot, 1.0, 0.0, 0.0);
    glRotatef(yrot, 0.0, 1.0, 0.0);
    glPushMatrix();

    //kanopi
    glBegin(GL_QUADS);
        glColor3f(1.0,228/255.0,100/255.0);
        //atas
        glVertex3f(-39.0,-10.0,20.0);
        glVertex3f(39.0,-10.0,20.0);
        glVertex3f(39.0,-10.0,10.0);
        glVertex3f(-39.0,-10.0,10.0);

        glVertex3f(-9.0,-10.0,0.0);
        glVertex3f(9.0,-10.0,0.0);
        glVertex3f(9.0,-10.0,10.0);
        glVertex3f(-9.0,-10.0,10.0);
        //depan
        glVertex3f(-39.0,-10.0,20.0);
        glVertex3f(39.0,-10.0,20.0);
        glVertex3f(39.0,-20.0,20.0);
        glVertex3f(-39.0,-20.0,20.0);
        //kanan
        glVertex3f(39.0,-10.0,20.0);
        glVertex3f(39.0,-10.0,10.0);
        glVertex3f(39.0,-20.0,10.0);
        glVertex3f(39.0,-20.0,20.0);
        //kiri
        glVertex3f(-39.0,-10.0,20.0);
        glVertex3f(-39.0,-10.0,10.0);
        glVertex3f(-39.0,-20.0,10.0);
        glVertex3f(-39.0,-20.0,20.0);
    glEnd();
    glBegin(GL_POLYGON);
        glColor3f(1.0,228/255.0,100/255.0);
        glVertex3f(14.0,-10.0,20.0);
        glVertex3f(14.0,-5.0,20.0);
        glVertex3f(14.0,-5.0,20.0);
        glVertex3f(10.0,-2.0,20.0);
        glVertex3f(-10.0,-2.0,20.0);
        glVertex3f(-14.0,-5.0,20.0);
        glVertex3f(-14.0,-5.0,20.0);
        glVertex3f(-14.0,-10.0,20.0);
    glEnd();
    //lubang kanopi depan
    for(float a=0;a<=72;a+=4.0)
    {
        glBegin(GL_POLYGON);
            glColor3f(0.0,0.0,0.0);
            glVertex3f(-37.0+a,-20.0,20.1);
            glVertex3f(-37.0+a,-14.0,20.1);
            glVertex3f(-36.5+a,-13.0,20.1);
            glVertex3f(-36.0+a,-12.5,20.1);
            glVertex3f(-35.5+a,-13.0,20.1);
            glVertex3f(-35.0+a,-14.0,20.1);
            glVertex3f(-35.0+a,-20.0,20.1);
        glEnd();
    }
    //lubang kanopi kanan
    for(float a=0;a<=6;a+=3.0)
    {
        glBegin(GL_POLYGON);
            glColor3f(0.0,0.0,0.0);
            glVertex3f(39.1,-20.0,19.0-a);
            glVertex3f(39.1,-14.0,19.0-a);
            glVertex3f(39.1,-13.0,18.5-a);
            glVertex3f(39.1,-12.5,18.0-a);
            glVertex3f(39.1,-13.0,17.5-a);
            glVertex3f(39.1,-14.0,17.0-a);
            glVertex3f(39.1,-20.0,17.0-a);
        glEnd();
    }
    //lubang kanopi kiri
    for(float a=0;a<=6;a+=3.0)
    {
        glBegin(GL_POLYGON);
            glColor3f(0.0,0.0,0.0);
            glVertex3f(-39.1,-20.0,19.0-a);
            glVertex3f(-39.1,-14.0,19.0-a);
            glVertex3f(-39.1,-13.0,18.5-a);
            glVertex3f(-39.1,-12.5,18.0-a);
            glVertex3f(-39.1,-13.0,17.5-a);
            glVertex3f(-39.1,-14.0,17.0-a);
            glVertex3f(-39.1,-20.0,17.0-a);
        glEnd();
    }

    //gedung tinggi
    glBegin(GL_QUADS);
        glColor3f(212/255.0, 199/255.0, 161/255.0);
        //atas
        glVertex3f(0.0,40.0,0.0);
        glVertex3f(18.0,40.0,0.0);
        glVertex3f(18.0,40.0,-20.0);
        glVertex3f(0.0,40.0,-20.0);
        //depan
        glVertex3f(0.0,40.0,0.0);
        glVertex3f(18.0,40.0,0.0);
        glVertex3f(18.0,-20.0,0.0);
        glVertex3f(0.0,-20.0,0.0);
        //belakang
        glVertex3f(0.0,40.0,-20.0);
        glVertex3f(18.0,40.0,-20.0);
        glVertex3f(18.0,-20.0,-20.0);
        glVertex3f(0.0,-20.0,-20.0);
        //kanan
        glVertex3f(18.0,40.0,0.0);
        glVertex3f(18.0,40.0,-20.0);
        glVertex3f(18.0,-20.0,-20.0);
        glVertex3f(18.0,-20.0,0.0);
        //kiri
        glVertex3f(0.0,40.0,0.0);
        glVertex3f(0.0,40.0,-20.0);
        glVertex3f(0.0,-20.0,-20.0);
        glVertex3f(0.0,-20.0,0.0);
    glEnd();
    //jendela depan - gedung tinggi
    for(float b=0.0;b<=36;b+=3.0)
    {
        for(float a=0.0;a<=12.0;a+=4.0)
        {
            glBegin(GL_POLYGON);
                glColor3f(0.0,0.0,0.0);
                glVertex3f(2.0+a,38.0-b,0.1);
                glVertex3f(2.0+a,36.0-b,0.1);
                glVertex3f(4.0+a,36.0-b,0.1);
                glVertex3f(4.0+a,38.0-b,0.1);
            glEnd();
        }
    }

    //jendela kanan - gedung tinggi
    for(float b=0.0;b<=36;b+=3.0)
    {
        for(float a=0.0;a<=16.0;a+=4.0)
        {
            glBegin(GL_POLYGON);
                glColor3f(0.0,0.0,0.0);
                glVertex3f(18.1,38.0-b,-1.0-a);
                glVertex3f(18.1,36.0-b,-1.0-a);
                glVertex3f(18.1,36.0-b,-3.0-a);
                glVertex3f(18.1,38.0-b,-3.0-a);
            glEnd();
        }
    }
    //jendela kiri - gedung tinggi
    for(float b=0.0;b<=6;b+=3.0)
    {
        for(float a=0.0;a<=16.0;a+=4.0)
        {
            glBegin(GL_POLYGON);
                glColor3f(0.0,0.0,0.0);
                glVertex3f(-0.1,38.0-b,-1.0-a);
                glVertex3f(-0.1,36.0-b,-1.0-a);
                glVertex3f(-0.1,36.0-b,-3.0-a);
                glVertex3f(-0.1,38.0-b,-3.0-a);
            glEnd();
        }
    }
    //atas gedung tinggi
    glBegin(GL_QUADS);
        glColor3f(212/255.0, 199/255.0, 161/255.0);
        //atas
        glVertex3f(2.0,50.0,-2.0);
        glVertex3f(16.0,50.0,-2.0);
        glVertex3f(16.0,50.0,-18.0);
        glVertex3f(2.0,50.0,-18.0);
        //depan
        glVertex3f(2.0,50.0,-2.0);
        glVertex3f(16.0,50.0,-2.0);
        glVertex3f(16.0,40.0,-2.0);
        glVertex3f(2.0,40.0,-2.0);
        //belakang
        glVertex3f(2.0,50.0,-18.0);
        glVertex3f(16.0,50.0,-18.0);
        glVertex3f(16.0,40.0,-18.0);
        glVertex3f(2.0,40.0,-18.0);
        //kanan
        glVertex3f(16.0,50.0,-2.0);
        glVertex3f(16.0,50.0,-18.0);
        glVertex3f(16.0,40.0,-18.0);
        glVertex3f(16.0,40.0,-2.0);
        //kiri
        glVertex3f(2.0,50.0,-2.0);
        glVertex3f(2.0,50.0,-18.0);
        glVertex3f(2.0,40.0,-18.0);
        glVertex3f(2.0,40.0,-2.0);
    glEnd();
    //jendela depan - atas gedung tinggi
    for(float b=0.0;b<=4;b+=4)
    {
        for(float a=0.0;a<=8.0;a+=4.0)
        {
            glBegin(GL_POLYGON);
                glColor3f(0.0,0.0,0.0);
                glVertex3f(4.0+a,48.0-b,-1.9);
                glVertex3f(4.0+a,46.0-b,-1.9);
                glVertex3f(6.0+a,46.0-b,-1.9);
                glVertex3f(6.0+a,48.0-b,-1.9);
            glEnd();
        }
    }
    //jendela kanan - atas gedung tinggi
    for(float b=0.0;b<=4;b+=4)
    {
        for(float a=0.0;a<=12.0;a+=4.0)
        {
            glBegin(GL_POLYGON);
                glColor3f(0.0,0.0,0.0);
                glVertex3f(16.1,48.0-b,-3.0-a);
                glVertex3f(16.1,46.0-b,-3.0-a);
                glVertex3f(16.1,46.0-b,-5.0-a);
                glVertex3f(16.1,48.0-b,-5.0-a);
            glEnd();
        }
    }
    //jendela kiri - atas gedung tinggi
    for(float b=0.0;b<=4;b+=4)
    {
        for(float a=0.0;a<=12.0;a+=4.0)
        {
            glBegin(GL_POLYGON);
                glColor3f(0.0,0.0,0.0);
                glVertex3f(1.9,48.0-b,-3.0-a);
                glVertex3f(1.9,46.0-b,-3.0-a);
                glVertex3f(1.9,46.0-b,-5.0-a);
                glVertex3f(1.9,48.0-b,-5.0-a);
            glEnd();
        }
    }
    //kiri gedung tinggi
    glBegin(GL_QUADS);
        glColor3f(212/255.0, 199/255.0, 161/255.0);
        //atas
        glVertex3f(0.0,30.0,0.0);
        glVertex3f(-27.0,30.0,0.0);
        glVertex3f(-27.0,30.0,-20.0);
        glVertex3f(0.0,30.0,-20.0);
        //depan
        glVertex3f(0.0,30.0,0.0);
        glVertex3f(-27.0,30.0,0.0);
        glVertex3f(-27.0,-20.0,0.0);
        glVertex3f(0.0,-20.0,0.0);
        //belakang
        glVertex3f(0.0,30.0,-20.0);
        glVertex3f(-27.0,30.0,-20.0);
        glVertex3f(-27.0,-20.0,-20.0);
        glVertex3f(0.0,-20.0,-20.0);
        //kiri
        glVertex3f(-27.0,30.0,0.0);
        glVertex3f(-27.0,30.0,-20.0);
        glVertex3f(-27.0,-20.0,-20.0);
        glVertex3f(-27.0,-20.0,0.0);
        //kanan
        glVertex3f(0.0,30.0,0.0);
        glVertex3f(0.0,30.0,-20.0);
        glVertex3f(0.0,-20.0,-20.0);
        glVertex3f(0.0,-20.0,0.0);

        //kirinya lagi
        //atas
        glVertex3f(-54.0,30.0,-7.0);
        glVertex3f(-27.0,30.0,-7.0);
        glVertex3f(-27.0,30.0,-20.0);
        glVertex3f(-54.0,30.0,-20.0);
        //depan
        glVertex3f(-54.0,30.0,-7.0);
        glVertex3f(-27.0,30.0,-7.0);
        glVertex3f(-27.0,-20.0,-7.0);
        glVertex3f(-54.0,-20.0,-7.0);
        //belakang
        glVertex3f(-54.0,30.0,-20.0);
        glVertex3f(-27.0,30.0,-20.0);
        glVertex3f(-27.0,-20.0,-20.0);
        glVertex3f(-54.0,-20.0,-20.0);
        //kiri
        glVertex3f(-27.0,30.0,-7.0);
        glVertex3f(-27.0,30.0,-20.0);
        glVertex3f(-27.0,-20.0,-20.0);
        glVertex3f(-27.0,-20.0,-7.0);
        //kanan
        glVertex3f(-54.0,30.0,-7.0);
        glVertex3f(-54.0,30.0,-20.0);
        glVertex3f(-54.0,-20.0,-20.0);
        glVertex3f(-54.0,-20.0,-7.0);
    glEnd();
    //jendela depan - kiri gedung tinggi
    for(float b=0.0;b<=27;b+=3.0)
    {
        for(float a=0.0;a<=20.0;a+=4.0)
        {
            glBegin(GL_POLYGON);
                glColor3f(0.0,0.0,0.0);
                glVertex3f(-25.0+a,29.0-b,0.1);
                glVertex3f(-25.0+a,27.0-b,0.1);
                glVertex3f(-23.0+a,27.0-b,0.1);
                glVertex3f(-23.0+a,29.0-b,0.1);
            glEnd();
        }
    }
    //jendela depan - kirinya kiri gedung tinggi
    for(float b=0.0;b<=27;b+=3.0)
    {
        for(float a=0.0;a<=20.0;a+=4.0)
        {
            glBegin(GL_POLYGON);
                glColor3f(0.0,0.0,0.0);
                glVertex3f(-52.0+a,29.0-b,-6.9);
                glVertex3f(-52.0+a,27.0-b,-6.9);
                glVertex3f(-50.0+a,27.0-b,-6.9);
                glVertex3f(-50.0+a,29.0-b,-6.9);
            glEnd();
        }
    }
    //kanan gedung tinggi
    glBegin(GL_QUADS);
        glColor3f(212/255.0, 199/255.0, 161/255.0);
        //atas
        glVertex3f(18.0,27.0,-9.0);
        glVertex3f(45.0,27.0,-9.0);
        glVertex3f(45.0,27.0,-20.0);
        glVertex3f(18.0,27.0,-20.0);
        //depan
        glVertex3f(18.0,27.0,-9.0);
        glVertex3f(45.0,27.0,-9.0);
        glVertex3f(45.0,-20.0,-9.0);
        glVertex3f(18.0,-20.0,-9.0);
        //belakang
        glVertex3f(18.0,27.0,-20.0);
        glVertex3f(45.0,27.0,-20.0);
        glVertex3f(45.0,-20.0,-20.0);
        glVertex3f(18.0,-20.0,-20.0);
        //kiri
        glVertex3f(45.0,27.0,-9.0);
        glVertex3f(45.0,27.0,-20.0);
        glVertex3f(45.0,-20.0,-20.0);
        glVertex3f(45.0,-20.0,-9.0);
        //kanan
        glVertex3f(18.0,27.0,-9.0);
        glVertex3f(18.0,27.0,-20.0);
        glVertex3f(18.0,-20.0,-20.0);
        glVertex3f(18.0,-20.0,-9.0);
    glEnd();
    //jendela depan - kanan gedung tinggi
    for(float b=0.0;b<=27;b+=3.0)
    {
        for(float a=0.0;a<=20.0;a+=4.0)
        {
            glBegin(GL_POLYGON);
                glColor3f(0.0,0.0,0.0);
                glVertex3f(20.0+a,26.0-b,-8.9);
                glVertex3f(20.0+a,24.0-b,-8.9);
                glVertex3f(22.0+a,24.0-b,-8.9);
                glVertex3f(22.0+a,26.0-b,-8.9);
            glEnd();
        }
    }

    //depan kanan gedung tinggi
    glBegin(GL_QUADS);
        glColor3f(212/255.0, 199/255.0, 161/255.0);
        //atas
        glVertex3f(9.0,15.0,0.0);
        glVertex3f(27.0,15.0,0.0);
        glVertex3f(27.0,15.0,10.0);
        glVertex3f(9.0,15.10,10.0);
        //depan
        glVertex3f(9.0,15.0,0.0);
        glVertex3f(27.0,15.0,0.0);
        glVertex3f(27.0,-20.0,0.0);
        glVertex3f(9.0,-20.0,0.0);
        //belakang
        glVertex3f(9.0,15.0,10.0);
        glVertex3f(27.0,15.0,10.0);
        glVertex3f(27.0,-20.0,10.0);
        glVertex3f(9.0,-20.0,10.0);
        //kanan
        glVertex3f(27.0,15.0,0.0);
        glVertex3f(27.0,15.0,10.0);
        glVertex3f(27.0,-20.0,10.0);
        glVertex3f(27.0,-20.0,0.0);
        //kiri
        glVertex3f(9.0,15.0,0.0);
        glVertex3f(9.0,15.0,10.0);
        glVertex3f(9.0,-20.0,10.0);
        glVertex3f(9.0,-20.0,0.0);

        //belakangnya
        //atas
        glVertex3f(18.0,15.0,0.0);
        glVertex3f(27.0,15.0,0.0);
        glVertex3f(27.0,15.0,-9.0);
        glVertex3f(18.0,15.10,-9.0);
        //depan
        glVertex3f(18.0,15.0,0.0);
        glVertex3f(27.0,15.0,0.0);
        glVertex3f(27.0,-20.0,0.0);
        glVertex3f(18.0,-20.0,0.0);
        //belakang
        glVertex3f(18.0,15.0,-9.0);
        glVertex3f(27.0,15.0,-9.0);
        glVertex3f(27.0,-20.0,-9.0);
        glVertex3f(18.0,-20.0,-9.0);
        //kanan
        glVertex3f(27.0,15.0,0.0);
        glVertex3f(27.0,15.0,-9.0);
        glVertex3f(27.0,-20.0,-9.0);
        glVertex3f(27.0,-20.0,0.0);
        //kiri
        glVertex3f(18.0,15.0,0.0);
        glVertex3f(18.0,15.0,-9.0);
        glVertex3f(18.0,-20.0,-9.0);
        glVertex3f(18.0,-20.0,0.0);
    glEnd();
    //jendela depan - depan kanan gedung tinggi
    for(float b=0.0;b<=18;b+=6.0)
    {
        for(float a=0.0;a<=12.0;a+=4.0)
        {
            glBegin(GL_POLYGON);
                glColor3f(0.0,0.0,0.0);
                glVertex3f(11.0+a,13.0-b,10.1);
                glVertex3f(11.0+a,9.0-b,10.1);
                glVertex3f(13.0+a,9.0-b,10.1);
                glVertex3f(13.0+a,13.0-b,10.1);
            glEnd();
        }
    }

    //depan kiri gedung tinggi
    glBegin(GL_QUADS);
        glColor3f(212/255.0, 199/255.0, 161/255.0);
        //atas
        glVertex3f(-9.0,15.0,0.0);
        glVertex3f(-27.0,15.0,0.0);
        glVertex3f(-27.0,15.0,10.0);
        glVertex3f(-9.0,15.10,10.0);
        //depan
        glVertex3f(-9.0,15.0,0.0);
        glVertex3f(-27.0,15.0,0.0);
        glVertex3f(-27.0,-20.0,0.0);
        glVertex3f(-9.0,-20.0,0.0);
        //belakang
        glVertex3f(-9.0,15.0,10.0);
        glVertex3f(-27.0,15.0,10.0);
        glVertex3f(-27.0,-20.0,10.0);
        glVertex3f(-9.0,-20.0,10.0);
        //kanan
        glVertex3f(-27.0,15.0,0.0);
        glVertex3f(-27.0,15.0,10.0);
        glVertex3f(-27.0,-20.0,10.0);
        glVertex3f(-27.0,-20.0,0.0);
        //kiri
        glVertex3f(-9.0,15.0,0.0);
        glVertex3f(-9.0,15.0,10.0);
        glVertex3f(-9.0,-20.0,10.0);
        glVertex3f(-9.0,-20.0,0.0);
    glEnd();
    //jendela depan - depan kiri gedung tinggi
    for(float b=0.0;b<=18;b+=6.0)
    {
        for(float a=0.0;a<=12.0;a+=4.0)
        {
            glBegin(GL_POLYGON);
                glColor3f(0.0,0.0,0.0);
                glVertex3f(-11.0-a,13.0-b,10.1);
                glVertex3f(-11.0-a,9.0-b,10.1);
                glVertex3f(-13.0-a,9.0-b,10.1);
                glVertex3f(-13.0-a,13.0-b,10.1);
            glEnd();
        }
    }

    //ujung kiri
    glBegin(GL_QUADS);
        glColor3f(212/255.0, 199/255.0, 161/255.0);
        //kanan
        glVertex3f(-54.0,30.0,-11.0);
        glVertex3f(-54.0,30.0,-16.0);
        glVertex3f(-54.0,-20.0,-16.0);
        glVertex3f(-54.0,-20.0,-11.0);
        //kanan-depan
        glVertex3f(-54.0,30.0,-11.0);
        glVertex3f(-54.0,-20.0,-11.0);
        glVertex3f(-58.0,-20.0,-7.0);
        glVertex3f(-58.0,30.0,-7.0);
        //depan
        glVertex3f(-58.0,30.0,-7.0);
        glVertex3f(-63.0,30.0,-7.0);
        glVertex3f(-63.0,-20.0,-7.0);
        glVertex3f(-58.0,-20.0,-7.0);
        //belakang
        glVertex3f(-58.0,30.0,-20.0);
        glVertex3f(-63.0,30.0,-20.0);
        glVertex3f(-63.0,-20.0,-20.0);
        glVertex3f(-58.0,-20.0,-20.0);
        //belakang-kanan
        glVertex3f(-54.0,30.0,-16.0);
        glVertex3f(-54.0,-20.0,-16.0);
        glVertex3f(-58.0,-20.0,-20.0);
        glVertex3f(-58.0,30.0,-20.0);
        //kiri
        glVertex3f(-67.0,30.0,-11.0);
        glVertex3f(-67.0,30.0,-16.0);
        glVertex3f(-67.0,-20.0,-16.0);
        glVertex3f(-67.0,-20.0,-11.0);
        //depan-kiri
        glVertex3f(-67.0,30.0,-11.0);
        glVertex3f(-67.0,-20.0,-11.0);
        glVertex3f(-63.0,-20.0,-7.0);
        glVertex3f(-63.0,30.0,-7.0);
        //belakang-kiri
        glVertex3f(-67.0,30.0,-16.0);
        glVertex3f(-67.0,-20.0,-16.0);
        glVertex3f(-63.0,-20.0,-20.0);
        glVertex3f(-63.0,30.0,-20.0);
    glEnd();


    //ujung kanan
    glBegin(GL_QUADS);
        float a=112.0, b=3.0;
        glColor3f(212/255.0, 199/255.0, 161/255.0);
        //kanan
        glVertex3f(-54.0+a,30.0-b,-11.0);
        glVertex3f(-54.0+a,30.0-b,-16.0);
        glVertex3f(-54.0+a,-20.0,-16.0);
        glVertex3f(-54.0+a,-20.0,-11.0);
        //kanan-depan
        glVertex3f(-54.0+a,30.0-b,-11.0);
        glVertex3f(-54.0+a,-20.0,-11.0);
        glVertex3f(-58.0+a,-20.0,-7.0);
        glVertex3f(-58.0+a,30.0-b,-7.0);
        //depan
        glVertex3f(-58.0+a,30.0-b,-7.0);
        glVertex3f(-63.0+a,30.0-b,-7.0);
        glVertex3f(-63.0+a,-20.0,-7.0);
        glVertex3f(-58.0+a,-20.0,-7.0);
        //belakang
        glVertex3f(-58.0+a,30.0-b,-20.0);
        glVertex3f(-63.0+a,30.0-b,-20.0);
        glVertex3f(-63.0+a,-20.0,-20.0);
        glVertex3f(-58.0+a,-20.0,-20.0);
        //belakang-kanan
        glVertex3f(-54.0+a,30.0-b,-16.0);
        glVertex3f(-54.0+a,-20.0,-16.0);
        glVertex3f(-58.0+a,-20.0,-20.0);
        glVertex3f(-58.0+a,30.0-b,-20.0);
        //kiri
        glVertex3f(-67.0+a,30.0-b,-11.0);
        glVertex3f(-67.0+a,30.0-b,-16.0);
        glVertex3f(-67.0+a,-20.0,-16.0);
        glVertex3f(-67.0+a,-20.0,-11.0);
        //depan-kiri
        glVertex3f(-67.0+a,30.0-b,-11.0);
        glVertex3f(-67.0+a,-20.0,-11.0);
        glVertex3f(-63.0+a,-20.0,-7.0);
        glVertex3f(-63.0+a,30.0-b,-7.0);
        //belakang-kiri
        glVertex3f(-67.0+a,30.0-b,-16.0);
        glVertex3f(-67.0+a,-20.0,-16.0);
        glVertex3f(-63.0+a,-20.0,-20.0);
        glVertex3f(-63.0+a,30.0-b,-20.0);
    glEnd();


    glPopMatrix();
    glutSwapBuffers();
}

void keyboard(unsigned char key, int x, int y)
{
    switch (key)
    {
    case '5': //transparansi objek
        if(is_depth)
        {
            is_depth=0;
            glDisable(GL_DEPTH_TEST);
        }else
        {
            is_depth=1;
            glEnable(GL_DEPTH_TEST);
        }
    }
    display();
}

void idle()
{
    if(!mousedown)
    {
        xrot+=0.3;
        yrot+=0.4;
    }
    glutPostRedisplay();
}

void mouse(int button, int state, int x, int y)
{
    if(button==GLUT_LEFT_BUTTON && state==GLUT_DOWN)
    {
        mousedown=true;
        xdiff=x-yrot;
        ydiff=-y+xrot;
    }
    else
    mousedown=false;
}

void mousemotion(int x, int y)
{
    if(mousedown)
    {
        yrot=x-xdiff;
        xrot=y+ydiff;

        glutPostRedisplay();
    }
}

void ukuran(int lebar, int tinggi)
{
    if(tinggi==0) tinggi=1;
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluPerspective(50.0,lebar/tinggi,5.0,500.0);
    glTranslatef(0.0,-5.0,-150.0);
    glMatrixMode(GL_MODELVIEW);
}
